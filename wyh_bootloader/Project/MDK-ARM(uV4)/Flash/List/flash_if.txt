; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\flash_if.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\flash_if.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\RL-ARM\Driver -I..\..\RL-ARM\Config -I..\..\RL-ARM\RL-RTX\inc -I..\..\User\libapp -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User -I..\..\Libraries\STM32_USB_Device_Library\Class\dfu\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -D__MICROLIB -D__UVISION_VERSION=518 -D_RTE_ -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\flash_if.crf ..\..\User\flash_if.c]
                          THUMB

                          AREA ||i.FLASH_If_DisableWriteProtection||, CODE, READONLY, ALIGN=1

                  FLASH_If_DisableWriteProtection PROC
;;;146      */
;;;147    uint32_t FLASH_If_DisableWriteProtection(uint32_t FlashAddress)
000000  b51c              PUSH     {r2-r4,lr}
;;;148    {
000002  4604              MOV      r4,r0
;;;149      __IO uint32_t UserStartSector = FLASH_Sector_1, UserWrpSectors = OB_WRP_Sector_1;
000004  2008              MOVS     r0,#8
000006  9001              STR      r0,[sp,#4]
000008  2002              MOVS     r0,#2
00000a  9000              STR      r0,[sp,#0]
;;;150    
;;;151      /* Get the sector where start the user flash area */
;;;152      UserStartSector = GetSector(FlashAddress);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GetSector
000012  9001              STR      r0,[sp,#4]
;;;153    
;;;154      /* Mark all sectors inside the user flash area as non protected */  
;;;155      UserWrpSectors = 0xFFF-((1 << (UserStartSector/8))-1);
000014  9801              LDR      r0,[sp,#4]
000016  08c1              LSRS     r1,r0,#3
000018  2001              MOVS     r0,#1
00001a  4088              LSLS     r0,r0,r1
00001c  1e40              SUBS     r0,r0,#1
00001e  f64071ff          MOV      r1,#0xfff
000022  1a08              SUBS     r0,r1,r0
000024  9000              STR      r0,[sp,#0]
;;;156       
;;;157      /* Unlock the Option Bytes */
;;;158      FLASH_OB_Unlock();
000026  f7fffffe          BL       FLASH_OB_Unlock
;;;159    
;;;160      /* Disable the write protection for all sectors inside the user flash area */
;;;161      FLASH_OB_WRPConfig(UserWrpSectors, DISABLE);
00002a  2100              MOVS     r1,#0
00002c  9800              LDR      r0,[sp,#0]
00002e  f7fffffe          BL       FLASH_OB_WRPConfig
;;;162    
;;;163      /* Start the Option Bytes programming process. */  
;;;164      if (FLASH_OB_Launch() != FLASH_COMPLETE)
000032  f7fffffe          BL       FLASH_OB_Launch
000036  2809              CMP      r0,#9
000038  d001              BEQ      |L1.62|
;;;165      {
;;;166        /* Error: Flash write unprotection failed */
;;;167        return (2);
00003a  2002              MOVS     r0,#2
                  |L1.60|
;;;168      }
;;;169    
;;;170      /* Write Protection successfully disabled */
;;;171      return (1);
;;;172    }
00003c  bd1c              POP      {r2-r4,pc}
                  |L1.62|
00003e  2001              MOVS     r0,#1                 ;171
000040  e7fc              B        |L1.60|
;;;173    
                          ENDP


                          AREA ||i.FLASH_If_EnableWriteProtection||, CODE, READONLY, ALIGN=1

                  FLASH_If_EnableWriteProtection PROC
;;;179      */
;;;180    uint32_t FLASH_If_EnableWriteProtection(uint32_t FlashAddress)
000000  b51c              PUSH     {r2-r4,lr}
;;;181    {
000002  4604              MOV      r4,r0
;;;182      __IO uint32_t UserStartSector = FLASH_Sector_1, UserWrpSectors = OB_WRP_Sector_1;
000004  2008              MOVS     r0,#8
000006  9001              STR      r0,[sp,#4]
000008  2002              MOVS     r0,#2
00000a  9000              STR      r0,[sp,#0]
;;;183    
;;;184      /* Get the sector where start the user flash area */
;;;185      UserStartSector = GetSector(FlashAddress);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GetSector
000012  9001              STR      r0,[sp,#4]
;;;186    
;;;187      /* Mark all sectors inside the user flash area as non protected */  
;;;188      UserWrpSectors = 0xFFF-((1 << (UserStartSector/8))-1);
000014  9801              LDR      r0,[sp,#4]
000016  08c1              LSRS     r1,r0,#3
000018  2001              MOVS     r0,#1
00001a  4088              LSLS     r0,r0,r1
00001c  1e40              SUBS     r0,r0,#1
00001e  f64071ff          MOV      r1,#0xfff
000022  1a08              SUBS     r0,r1,r0
000024  9000              STR      r0,[sp,#0]
;;;189       
;;;190      /* Unlock the Option Bytes */
;;;191      FLASH_OB_Unlock();
000026  f7fffffe          BL       FLASH_OB_Unlock
;;;192    
;;;193      /* Disable the write protection for all sectors inside the user flash area */
;;;194      FLASH_OB_WRPConfig(UserWrpSectors, ENABLE);
00002a  2101              MOVS     r1,#1
00002c  9800              LDR      r0,[sp,#0]
00002e  f7fffffe          BL       FLASH_OB_WRPConfig
;;;195    
;;;196      /* Start the Option Bytes programming process. */  
;;;197      if (FLASH_OB_Launch() != FLASH_COMPLETE)
000032  f7fffffe          BL       FLASH_OB_Launch
000036  2809              CMP      r0,#9
000038  d001              BEQ      |L2.62|
;;;198      {
;;;199        /* Error: Flash write unprotection failed */
;;;200        return (2);
00003a  2002              MOVS     r0,#2
                  |L2.60|
;;;201      }
;;;202    
;;;203      /* Write Protection successfully disabled */
;;;204      return (1);
;;;205    }
00003c  bd1c              POP      {r2-r4,pc}
                  |L2.62|
00003e  2001              MOVS     r0,#1                 ;204
000040  e7fc              B        |L2.60|
;;;206    
                          ENDP


                          AREA ||i.FLASH_If_Erase||, CODE, READONLY, ALIGN=1

                  FLASH_If_Erase PROC
;;;60       */
;;;61     uint32_t FLASH_If_Erase(uint32_t StartSector, uint32_t FlashAddress)
000000  b570              PUSH     {r4-r6,lr}
;;;62     {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;63       uint32_t UserStartSector = FLASH_Sector_1;
000006  2508              MOVS     r5,#8
;;;64     
;;;65       /* Get the sector where start the user flash area */
;;;66       UserStartSector = GetSector(FlashAddress);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       GetSector
00000e  4605              MOV      r5,r0
;;;67     
;;;68       /* Device voltage range supposed to be [2.7V to 3.6V], the operation will
;;;69          be done by word */ 
;;;70       if (FLASH_EraseSector(UserStartSector, VoltageRange_3) != FLASH_COMPLETE)
000010  2102              MOVS     r1,#2
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       FLASH_EraseSector
000018  2809              CMP      r0,#9
00001a  d001              BEQ      |L3.32|
;;;71       {
;;;72         /* Error occurred while page erase */
;;;73         return (1);
00001c  2001              MOVS     r0,#1
                  |L3.30|
;;;74       }
;;;75       return (0);
;;;76     }
00001e  bd70              POP      {r4-r6,pc}
                  |L3.32|
000020  2000              MOVS     r0,#0                 ;75
000022  e7fc              B        |L3.30|
;;;77     
                          ENDP


                          AREA ||i.FLASH_If_GetWriteProtectionStatus||, CODE, READONLY, ALIGN=1

                  FLASH_If_GetWriteProtectionStatus PROC
;;;122      */
;;;123    uint16_t FLASH_If_GetWriteProtectionStatus(uint32_t FlashAddress)
000000  b570              PUSH     {r4-r6,lr}
;;;124    {
000002  4605              MOV      r5,r0
;;;125      uint32_t UserStartSector = FLASH_Sector_1;
000004  2408              MOVS     r4,#8
;;;126    
;;;127      /* Get the sector where start the user flash area */
;;;128      UserStartSector = GetSector(FlashAddress);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GetSector
00000c  4604              MOV      r4,r0
;;;129    
;;;130      /* Check if there are write protected sectors inside the user flash area */
;;;131      if ((FLASH_OB_GetWRP() >> (UserStartSector/8)) == (0xFFF >> (UserStartSector/8)))
00000e  f7fffffe          BL       FLASH_OB_GetWRP
000012  08e1              LSRS     r1,r4,#3
000014  4108              ASRS     r0,r0,r1
000016  08e2              LSRS     r2,r4,#3
000018  f64071ff          MOV      r1,#0xfff
00001c  4111              ASRS     r1,r1,r2
00001e  4288              CMP      r0,r1
000020  d101              BNE      |L4.38|
;;;132      { /* No write protected sectors inside the user flash area */
;;;133        return 1;
000022  2001              MOVS     r0,#1
                  |L4.36|
;;;134      }
;;;135      else
;;;136      { /* Some sectors inside the user flash area are write protected */
;;;137        return 0;
;;;138      }
;;;139    }
000024  bd70              POP      {r4-r6,pc}
                  |L4.38|
000026  2000              MOVS     r0,#0                 ;137
000028  e7fc              B        |L4.36|
;;;140    
                          ENDP


                          AREA ||i.FLASH_If_Init||, CODE, READONLY, ALIGN=1

                  FLASH_If_Init PROC
;;;43       */
;;;44     void FLASH_If_Init(void)
000000  b510              PUSH     {r4,lr}
;;;45     { 
;;;46       FLASH_Unlock(); 
000002  f7fffffe          BL       FLASH_Unlock
;;;47     
;;;48       /* Clear pending flags (if any) */  
;;;49       FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | 
000006  20f3              MOVS     r0,#0xf3
000008  f7fffffe          BL       FLASH_ClearFlag
;;;50                       FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR|FLASH_FLAG_PGSERR);
;;;51     }
00000c  bd10              POP      {r4,pc}
;;;52     
                          ENDP


                          AREA ||i.FLASH_If_Write||, CODE, READONLY, ALIGN=2

                  FLASH_If_Write PROC
;;;87       */
;;;88     uint32_t FLASH_If_Write(__IO uint32_t* FlashAddress, uint32_t* Data ,uint16_t DataLength)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;89     {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;90       uint32_t i = 0;
00000a  2500              MOVS     r5,#0
;;;91     
;;;92       for (i = 0; (i < DataLength) && (*FlashAddress <= (USER_FLASH_END_ADDRESS-4)); i++)
00000c  bf00              NOP      
00000e  e016              B        |L6.62|
                  |L6.16|
;;;93       {
;;;94         /* Device voltage range supposed to be [2.7V to 3.6V], the operation will
;;;95            be done by word */ 
;;;96         if (FLASH_ProgramWord(*FlashAddress, *(uint32_t*)(Data+i)) == FLASH_COMPLETE)
000010  f8561025          LDR      r1,[r6,r5,LSL #2]
000014  6820              LDR      r0,[r4,#0]
000016  f7fffffe          BL       FLASH_ProgramWord
00001a  2809              CMP      r0,#9
00001c  d10c              BNE      |L6.56|
;;;97         {
;;;98          /* Check the written value */
;;;99           if (*(uint32_t*)*FlashAddress != *(uint32_t*)(Data+i))
00001e  6820              LDR      r0,[r4,#0]
000020  6800              LDR      r0,[r0,#0]
000022  f8561025          LDR      r1,[r6,r5,LSL #2]
000026  4288              CMP      r0,r1
000028  d002              BEQ      |L6.48|
;;;100          {
;;;101            /* Flash content doesn't match SRAM content */
;;;102            return(2);
00002a  2002              MOVS     r0,#2
                  |L6.44|
;;;103          }
;;;104          /* Increment FLASH destination address */
;;;105          *FlashAddress += 4;
;;;106        }
;;;107        else
;;;108        {
;;;109          /* Error occurred while writing data in Flash memory */
;;;110          return (1);
;;;111        }
;;;112      }
;;;113    
;;;114      return (0);
;;;115    }
00002c  e8bd81f0          POP      {r4-r8,pc}
                  |L6.48|
000030  6820              LDR      r0,[r4,#0]            ;105
000032  1d00              ADDS     r0,r0,#4              ;105
000034  6020              STR      r0,[r4,#0]            ;105
000036  e001              B        |L6.60|
                  |L6.56|
000038  2001              MOVS     r0,#1                 ;110
00003a  e7f7              B        |L6.44|
                  |L6.60|
00003c  1c6d              ADDS     r5,r5,#1              ;92
                  |L6.62|
00003e  42bd              CMP      r5,r7                 ;92
000040  d203              BCS      |L6.74|
000042  6820              LDR      r0,[r4,#0]            ;92
000044  4902              LDR      r1,|L6.80|
000046  4288              CMP      r0,r1                 ;92
000048  d9e2              BLS      |L6.16|
                  |L6.74|
00004a  2000              MOVS     r0,#0                 ;114
00004c  e7ee              B        |L6.44|
;;;116    
                          ENDP

00004e  0000              DCW      0x0000
                  |L6.80|
                          DCD      0x080ffffb

                          AREA ||i.GetSector||, CODE, READONLY, ALIGN=2

                  GetSector PROC
;;;211      */
;;;212    static uint32_t GetSector(uint32_t Address)
000000  4601              MOV      r1,r0
;;;213    {
;;;214      uint32_t sector = 0;
000002  2000              MOVS     r0,#0
;;;215      
;;;216      if((Address < ADDR_FLASH_SECTOR_1) && (Address >= ADDR_FLASH_SECTOR_0))
000004  4a2c              LDR      r2,|L7.184|
000006  4291              CMP      r1,r2
000008  d203              BCS      |L7.18|
00000a  f1b16f00          CMP      r1,#0x8000000
00000e  d300              BCC      |L7.18|
;;;217      {
;;;218        sector = FLASH_Sector_0;  
000010  e050              B        |L7.180|
                  |L7.18|
;;;219      }
;;;220      else if((Address < ADDR_FLASH_SECTOR_2) && (Address >= ADDR_FLASH_SECTOR_1))
000012  4a2a              LDR      r2,|L7.188|
000014  4291              CMP      r1,r2
000016  d204              BCS      |L7.34|
000018  4a27              LDR      r2,|L7.184|
00001a  4291              CMP      r1,r2
00001c  d301              BCC      |L7.34|
;;;221      {
;;;222        sector = FLASH_Sector_1;  
00001e  2008              MOVS     r0,#8
000020  e048              B        |L7.180|
                  |L7.34|
;;;223      }
;;;224      else if((Address < ADDR_FLASH_SECTOR_3) && (Address >= ADDR_FLASH_SECTOR_2))
000022  4a27              LDR      r2,|L7.192|
000024  4291              CMP      r1,r2
000026  d204              BCS      |L7.50|
000028  4a24              LDR      r2,|L7.188|
00002a  4291              CMP      r1,r2
00002c  d301              BCC      |L7.50|
;;;225      {
;;;226        sector = FLASH_Sector_2;  
00002e  2010              MOVS     r0,#0x10
000030  e040              B        |L7.180|
                  |L7.50|
;;;227      }
;;;228      else if((Address < ADDR_FLASH_SECTOR_4) && (Address >= ADDR_FLASH_SECTOR_3))
000032  4a24              LDR      r2,|L7.196|
000034  4291              CMP      r1,r2
000036  d204              BCS      |L7.66|
000038  4a21              LDR      r2,|L7.192|
00003a  4291              CMP      r1,r2
00003c  d301              BCC      |L7.66|
;;;229      {
;;;230        sector = FLASH_Sector_3;  
00003e  2018              MOVS     r0,#0x18
000040  e038              B        |L7.180|
                  |L7.66|
;;;231      }
;;;232      else if((Address < ADDR_FLASH_SECTOR_5) && (Address >= ADDR_FLASH_SECTOR_4))
000042  4a21              LDR      r2,|L7.200|
000044  4291              CMP      r1,r2
000046  d204              BCS      |L7.82|
000048  4a1e              LDR      r2,|L7.196|
00004a  4291              CMP      r1,r2
00004c  d301              BCC      |L7.82|
;;;233      {
;;;234        sector = FLASH_Sector_4;  
00004e  2020              MOVS     r0,#0x20
000050  e030              B        |L7.180|
                  |L7.82|
;;;235      }
;;;236      else if((Address < ADDR_FLASH_SECTOR_6) && (Address >= ADDR_FLASH_SECTOR_5))
000052  4a1e              LDR      r2,|L7.204|
000054  4291              CMP      r1,r2
000056  d204              BCS      |L7.98|
000058  4a1b              LDR      r2,|L7.200|
00005a  4291              CMP      r1,r2
00005c  d301              BCC      |L7.98|
;;;237      {
;;;238        sector = FLASH_Sector_5;  
00005e  2028              MOVS     r0,#0x28
000060  e028              B        |L7.180|
                  |L7.98|
;;;239      }
;;;240      else if((Address < ADDR_FLASH_SECTOR_7) && (Address >= ADDR_FLASH_SECTOR_6))
000062  4a1b              LDR      r2,|L7.208|
000064  4291              CMP      r1,r2
000066  d204              BCS      |L7.114|
000068  4a18              LDR      r2,|L7.204|
00006a  4291              CMP      r1,r2
00006c  d301              BCC      |L7.114|
;;;241      {
;;;242        sector = FLASH_Sector_6;  
00006e  2030              MOVS     r0,#0x30
000070  e020              B        |L7.180|
                  |L7.114|
;;;243      }
;;;244      else if((Address < ADDR_FLASH_SECTOR_8) && (Address >= ADDR_FLASH_SECTOR_7))
000072  4a18              LDR      r2,|L7.212|
000074  4291              CMP      r1,r2
000076  d204              BCS      |L7.130|
000078  4a15              LDR      r2,|L7.208|
00007a  4291              CMP      r1,r2
00007c  d301              BCC      |L7.130|
;;;245      {
;;;246        sector = FLASH_Sector_7;  
00007e  2038              MOVS     r0,#0x38
000080  e018              B        |L7.180|
                  |L7.130|
;;;247      }
;;;248      else if((Address < ADDR_FLASH_SECTOR_9) && (Address >= ADDR_FLASH_SECTOR_8))
000082  4a15              LDR      r2,|L7.216|
000084  4291              CMP      r1,r2
000086  d204              BCS      |L7.146|
000088  4a12              LDR      r2,|L7.212|
00008a  4291              CMP      r1,r2
00008c  d301              BCC      |L7.146|
;;;249      {
;;;250        sector = FLASH_Sector_8;  
00008e  2040              MOVS     r0,#0x40
000090  e010              B        |L7.180|
                  |L7.146|
;;;251      }
;;;252      else if((Address < ADDR_FLASH_SECTOR_10) && (Address >= ADDR_FLASH_SECTOR_9))
000092  4a12              LDR      r2,|L7.220|
000094  4291              CMP      r1,r2
000096  d204              BCS      |L7.162|
000098  4a0f              LDR      r2,|L7.216|
00009a  4291              CMP      r1,r2
00009c  d301              BCC      |L7.162|
;;;253      {
;;;254        sector = FLASH_Sector_9;  
00009e  2048              MOVS     r0,#0x48
0000a0  e008              B        |L7.180|
                  |L7.162|
;;;255      }
;;;256      else if((Address < ADDR_FLASH_SECTOR_11) && (Address >= ADDR_FLASH_SECTOR_10))
0000a2  4a0f              LDR      r2,|L7.224|
0000a4  4291              CMP      r1,r2
0000a6  d204              BCS      |L7.178|
0000a8  4a0c              LDR      r2,|L7.220|
0000aa  4291              CMP      r1,r2
0000ac  d301              BCC      |L7.178|
;;;257      {
;;;258        sector = FLASH_Sector_10;  
0000ae  2050              MOVS     r0,#0x50
0000b0  e000              B        |L7.180|
                  |L7.178|
;;;259      }
;;;260      else/*(Address < FLASH_END_ADDR) && (Address >= ADDR_FLASH_SECTOR_11))*/
;;;261      {
;;;262        sector = FLASH_Sector_11;  
0000b2  2058              MOVS     r0,#0x58
                  |L7.180|
;;;263      }
;;;264        return sector;
;;;265    }
0000b4  4770              BX       lr
;;;266    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L7.184|
                          DCD      0x08004000
                  |L7.188|
                          DCD      0x08008000
                  |L7.192|
                          DCD      0x0800c000
                  |L7.196|
                          DCD      0x08010000
                  |L7.200|
                          DCD      0x08020000
                  |L7.204|
                          DCD      0x08040000
                  |L7.208|
                          DCD      0x08060000
                  |L7.212|
                          DCD      0x08080000
                  |L7.216|
                          DCD      0x080a0000
                  |L7.220|
                          DCD      0x080c0000
                  |L7.224|
                          DCD      0x080e0000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\flash_if.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_flash_if_c_79a35935____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_flash_if_c_79a35935____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_flash_if_c_79a35935____REVSH|
#line 144
|__asm___10_flash_if_c_79a35935____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_flash_if_c_79a35935____RRX|
#line 300
|__asm___10_flash_if_c_79a35935____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
