; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\RL-ARM\Driver -I..\..\RL-ARM\Config -I..\..\RL-ARM\RL-RTX\inc -I..\..\User\libapp -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User -I..\..\Libraries\STM32_USB_Device_Library\Class\dfu\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -D__MICROLIB -D__UVISION_VERSION=518 -D_RTE_ -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;85     */
;;;86     void bsp_Idle(void)
000000  4770              BX       lr
;;;87     {
;;;88     	/* --- 喂狗 */
;;;89     
;;;90     	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;91     
;;;92     	/* 例如 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;93     	//GUI_Exec();
;;;94     
;;;95     	/* 例如 uIP 协议，可以插入uip轮询函数 */
;;;96     }
;;;97     
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;29     */
;;;30     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;31     {
;;;32     	/*
;;;33     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;34     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;35     
;;;36     		系统时钟缺省配置为168MHz，如果需要更改，可以修改 system_stm32f4xx.c 文件
;;;37     	*/
;;;38     	/* 优先级分组设置为4，可配置0-15级抢占式优先级，0级子优先级，即不存在子优先级。*/
;;;39     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;40     	bsp_InitUart(); 	/* 初始化串口 */
00000a  f7fffffe          BL       bsp_InitUart
;;;41     	bsp_InitKey();		/* 初始化按键变量（必须在 bsp_InitTimer() 之前调用） */
00000e  f7fffffe          BL       bsp_InitKey
;;;42     	bsp_InitLed(); 		/* 初始LED指示灯端口 */
000012  f7fffffe          BL       bsp_InitLed
;;;43     	bsp_InitTimer();  /* 初始化滴答定时器 */
000016  f7fffffe          BL       bsp_InitTimer
;;;44     
;;;45     }
00001a  bd10              POP      {r4,pc}
;;;46     
                          ENDP


                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;55     */
;;;56     void bsp_RunPer10ms(void)
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58     		bsp_KeyScan();
000002  f7fffffe          BL       bsp_KeyScan
;;;59     }
000006  bd10              POP      {r4,pc}
;;;60     
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=2

                  bsp_RunPer1ms PROC
;;;70     extern volatile unsigned long LocalTime;
;;;71     void bsp_RunPer1ms(void)
000000  4805              LDR      r0,|L4.24|
;;;72     {
;;;73     	  LocalTime++;
000002  6800              LDR      r0,[r0,#0]  ; LocalTime
000004  1c40              ADDS     r0,r0,#1
000006  4904              LDR      r1,|L4.24|
000008  6008              STR      r0,[r1,#0]  ; LocalTime
;;;74         LocalTime &= 0x7FFFFFF;
00000a  4608              MOV      r0,r1
00000c  6800              LDR      r0,[r0,#0]  ; LocalTime
00000e  f0204078          BIC      r0,r0,#0xf8000000
000012  6008              STR      r0,[r1,#0]  ; LocalTime
;;;75     }
000014  4770              BX       lr
;;;76     
                          ENDP

000016  0000              DCW      0x0000
                  |L4.24|
                          DCD      LocalTime

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 144
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____RRX|
#line 300
|__asm___5_bsp_c_bsp_Init____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
